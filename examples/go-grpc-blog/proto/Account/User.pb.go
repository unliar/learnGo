// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Account/UserService.proto

package User

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UserModel struct {
	ID                   int64    `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	Sex                  string   `protobuf:"bytes,3,opt,name=Sex" json:"Sex,omitempty"`
	Age                  int64    `protobuf:"varint,4,opt,name=Age" json:"Age,omitempty"`
	Summary              string   `protobuf:"bytes,5,opt,name=summary" json:"summary,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserModel) Reset()         { *m = UserModel{} }
func (m *UserModel) String() string { return proto.CompactTextString(m) }
func (*UserModel) ProtoMessage()    {}
func (*UserModel) Descriptor() ([]byte, []int) {
	return fileDescriptor_User_a6d1f7b28d639bad, []int{0}
}
func (m *UserModel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserModel.Unmarshal(m, b)
}
func (m *UserModel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserModel.Marshal(b, m, deterministic)
}
func (dst *UserModel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserModel.Merge(dst, src)
}
func (m *UserModel) XXX_Size() int {
	return xxx_messageInfo_UserModel.Size(m)
}
func (m *UserModel) XXX_DiscardUnknown() {
	xxx_messageInfo_UserModel.DiscardUnknown(m)
}

var xxx_messageInfo_UserModel proto.InternalMessageInfo

func (m *UserModel) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *UserModel) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserModel) GetSex() string {
	if m != nil {
		return m.Sex
	}
	return ""
}

func (m *UserModel) GetAge() int64 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *UserModel) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func init() {
	proto.RegisterType((*UserModel)(nil), "UserService.UserModel")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	GetUser(ctx context.Context, in *UserModel, opts ...grpc.CallOption) (*UserModel, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) GetUser(ctx context.Context, in *UserModel, opts ...grpc.CallOption) (*UserModel, error) {
	out := new(UserModel)
	err := c.cc.Invoke(ctx, "/UserService.UserService/getUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	GetUser(context.Context, *UserModel) (*UserModel, error)
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/UserService.UserService/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetUser(ctx, req.(*UserModel))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "UserService.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getUser",
			Handler:    _UserService_GetUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "Account/UserService.proto",
}

func init() { proto.RegisterFile("Account/UserService.proto", fileDescriptor_User_a6d1f7b28d639bad) }

var fileDescriptor_User_a6d1f7b28d639bad = []byte{
	// 171 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x72, 0x4c, 0x4e, 0xce,
	0x2f, 0xcd, 0x2b, 0xd1, 0x0f, 0x2d, 0x4e, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62,
	0x01, 0xb1, 0x95, 0x72, 0xb9, 0x38, 0x41, 0xb4, 0x6f, 0x7e, 0x4a, 0x6a, 0x8e, 0x10, 0x1f, 0x17,
	0x93, 0xa7, 0x8b, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x73, 0x10, 0x93, 0xa7, 0x8b, 0x90, 0x10, 0x17,
	0x8b, 0x5f, 0x62, 0x6e, 0xaa, 0x04, 0x93, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x98, 0x2d, 0x24, 0xc0,
	0xc5, 0x1c, 0x9c, 0x5a, 0x21, 0xc1, 0x0c, 0x16, 0x02, 0x31, 0x41, 0x22, 0x8e, 0xe9, 0xa9, 0x12,
	0x2c, 0x60, 0x6d, 0x20, 0xa6, 0x90, 0x04, 0x17, 0x7b, 0x71, 0x69, 0x6e, 0x6e, 0x62, 0x51, 0xa5,
	0x04, 0x2b, 0x58, 0x1d, 0x8c, 0x6b, 0x64, 0xc3, 0xc5, 0x0d, 0xb2, 0x2e, 0x38, 0xb5, 0xa8, 0x2c,
	0x33, 0x39, 0x55, 0x48, 0x97, 0x8b, 0x3d, 0x3d, 0xb5, 0x04, 0x24, 0x22, 0xc4, 0xaf, 0x07, 0x76,
	0x1b, 0xdc, 0x31, 0x52, 0xe8, 0x02, 0x4a, 0x0c, 0x49, 0x6c, 0x60, 0x97, 0x1b, 0x03, 0x02, 0x00,
	0x00, 0xff, 0xff, 0xa7, 0x93, 0xa7, 0x54, 0xcf, 0x00, 0x00, 0x00,
}
